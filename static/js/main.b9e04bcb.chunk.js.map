{"version":3,"sources":["App.tsx","serviceWorker.ts","components/LessonCreator.tsx","components/LessonCard.tsx","pages/Admin.tsx","pages/Students.tsx","index.tsx"],"names":["App","className","Boolean","window","location","hostname","match","initialState","lessonName","teacherName","time","day","category","lessonId","reducer","state","field","value","LessonCreator","onSubmit","useReducer","dispatch","onChange","e","idValue","_","uniqueId","generateId","target","name","preventDefault","type","placeholder","studentName","studentId","LessonCard","lesson","isAdmin","console","log","students","AdminPage","useState","lessons","setLesson","AddStudent","student","map","StudentsPage","routing","to","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b9e04bcb.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"pageWrapper\">      \n      Home Page\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer } from 'react';\r\nimport _ from 'lodash';\r\nimport { lessonType, reducerType, LessonCreatorType, InputEvent, ButtonEvent } from '../types';\r\n\r\nconst initialState: lessonType = {\r\n\tlessonName: '',\r\n\tteacherName: '',\r\n\ttime: '',\r\n\tday: '',\r\n\tcategory: '',\r\n\tlessonId: ''\r\n}\r\n\r\n\r\nconst reducer = (state: lessonType, { field, value }: reducerType) => ({\r\n\t...state,\r\n\t[field]: value\r\n})\r\n\r\nconst LessonCreator: LessonCreatorType = ({ onSubmit }) => {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\tconst { lessonName, teacherName, time, day, category } = state;\r\n\r\n\tconst generateId = () => {\r\n\t\tconst idValue = _.uniqueId('lesson_');\r\n\t\tdispatch({ field: 'lessonId', value: idValue })\r\n\t}\r\n\r\n\tconst onChange = (e: InputEvent) => {\r\n\t\tif (state.lessonId === \"\") { generateId() };\r\n\t\tdispatch({ field: e.target.name, value: e.target.value })\r\n\t}\r\n\r\n\tconst handleSubmit = (e: ButtonEvent) => {\r\n\t\te.preventDefault();\r\n\t\tonSubmit(state);\r\n\t\tdispatch({ field: 'lessonId', value: '' })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div className=\"field\">\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<input className=\"input is-primary\" type=\"text\" name=\"lessonName\" onChange={onChange} value={lessonName} placeholder=\"Clase\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"field\">\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<input className=\"input is-primary\" type=\"text\" name=\"teacherName\" onChange={onChange} value={teacherName} placeholder=\"Instructor\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"field\">\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<input className=\"input is-primary\" type=\"text\" name=\"time\" onChange={onChange} value={time} placeholder=\"Hora\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"field\">\r\n\t\t\t\t<div className=\"select\">\r\n\t\t\t\t\t<select value={day} name=\"day\" onChange={onChange}>\r\n\t\t\t\t\t\t<option value=''>Elegir un dia</option>\r\n\t\t\t\t\t\t<option value=\"monday\">Lunes</option>\r\n\t\t\t\t\t\t<option value=\"tuesday\">Martes</option>\r\n\t\t\t\t\t\t<option value=\"wednesday\">Miercoles</option>\r\n\t\t\t\t\t\t<option value=\"thursday\">Jueves</option>\r\n\t\t\t\t\t\t<option value=\"friday\">Viernes</option>\r\n\t\t\t\t\t\t<option value=\"saturday\">Sabado</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"select\">\r\n\t\t\t\t\t<select value={category} name=\"category\" onChange={onChange}>\r\n\t\t\t\t\t\t<option value=''>Elegir categoria</option>\r\n\t\t\t\t\t\t<option value='martial'>Artes Marciales</option>\r\n\t\t\t\t\t\t<option value='fitness'>Fitness</option>\r\n\t\t\t\t\t\t<option value='musculacion'>Musculacion</option>\r\n\t\t\t\t\t\t<option value='indoor'>Indoor</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"submit\" className=\"button\" value=\"Agregar una clase\" />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default LessonCreator","import React, { useReducer } from 'react';\r\nimport { studentType, reducerType, InputEvent, ButtonEvent, LessonCardType } from '../types';\r\nimport LessonCreator from './LessonCreator';\r\n\r\n\r\nconst initialState: studentType = {\r\n\tstudentName: '',\r\n\tstudentId: 0\r\n}\r\n\r\nconst reducer = (state: studentType, { field, value }: reducerType) => ({\r\n\t...state,\r\n\t[field]: value\r\n})\r\n\r\nconst LessonCard: LessonCardType = ({lesson: {lessonName, teacherName, time, day, category, lessonId}, isAdmin, onSubmit}) => {\r\n\r\n\t// const {lessonName, teacherName, time, day, category, lessonId} = lesson;\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\tconst { studentName, studentId } = state;\r\n\r\n\tconst onChange = (e: InputEvent) => {\r\n\t\tdispatch({ field: e.target.name, value: e.target.value })\r\n\t}\r\n\r\n\tconst handleSubmit = (e: ButtonEvent) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(state)\r\n\t\tonSubmit(state, lessonId);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"box\">\r\n\t\t\t<h2 className=\"title\">{lessonName} - {category}</h2>\r\n\t\t\t<h3 className=\"subtitle\">instructor: {teacherName} - {day}, {time}</h3>\r\n\t\t\t<div className=\"students-container\">\r\n\t\t\t\t{/* { \r\n\t\t\t\tstate.length > 1 && isAdmin &&\t\r\n\t\t\t\t<div className=\"confirmed-students\">\r\n\t\t\t\t\t\t<h6 className=\"title is-6\">Alumnos confirmados:</h6>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{state.map((student) => (student.studentName) ? <li className=\"student\">{student.studentName}</li> : '')}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t\t<form className=\"inscripcion\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<span className=\"title is-6 inscripcion-title\">Para anotarte, completa tus datos</span>\r\n\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t<input className=\"input is-small\" type=\"text\" name=\"studentName\" onChange={onChange} value={studentName} placeholder=\"Nombre\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t<input className=\"input is-small\" type=\"number\" name=\"studentId\" onChange={onChange} value={studentId} placeholder=\"ID del gimnasio\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"submit\" className=\"button is-small\" value=\"Anotarse\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default LessonCard","import React, { useState } from 'react';\r\nimport LessonCreator from '../components/LessonCreator';\r\nimport LessonCard from '../components/LessonCard';\r\nimport { onSubmitLessonType, lessonType, onSubmitStudentType } from '../types';\r\n\r\nconst initialState: lessonType[] = [{\r\n\tlessonName: '',\r\n\tteacherName: '',\r\n\ttime: '',\r\n\tday: '',\r\n\tcategory: '',\r\n\tlessonId: '',\r\n\tstudents:[]\r\n}];\r\n\r\nconst AdminPage = () => {\r\n\tconst [lessons, setLesson] = useState(initialState);\r\n\r\n\tconst CreateNewLesson: onSubmitLessonType = (lesson) => {\r\n\t\tsetLesson([...lessons, { ...lesson }])\r\n\t};\r\n\r\n\tconst AddStudent: onSubmitStudentType = (student, lessonId) => {\r\n\t\tconsole.log(student)\r\n\t\tconsole.log('for class ' + lessonId)\r\n\t}\r\n\r\n\t//TODO: Add students to class\r\n\r\n\treturn (\r\n\t\t<div className=\"pageWrapper\">\r\n\t\t\t<h1 className=\"title\">Admin Page</h1>\r\n\t\t\t<LessonCreator onSubmit={CreateNewLesson} />\r\n\t\t\t<div className=\"lesson-container\">\r\n\t\t\t\t{lessons.map((lesson: lessonType) => (lesson.lessonName && lesson.time) ? <LessonCard {... { lesson, isAdmin: true, onSubmit:AddStudent }} /> : '')}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default AdminPage","import React from 'react';\r\n\r\nconst StudentsPage = () => {\r\n\treturn <h1 className=\"title\">Student Page</h1>\r\n};\r\n\r\nexport default StudentsPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'bulma/css/bulma.css'\nimport App from './App';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport AdminPage from './pages/Admin';\nimport StudentsPage from './pages/Students';\n\nconst routing = (\n  <Router>\n    <div>\n      <ul className=\"navLinks\">\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/admin\">admin</Link>\n        </li>\n        <li>\n          <Link to=\"/anotarse\">anotarse</Link>\n        </li>\n      </ul>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/admin\" component={AdminPage} />\n      <Route path=\"/anotarse\" component={StudentsPage} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}